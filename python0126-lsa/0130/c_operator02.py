#! 비트 연산자

# 비트(bit)
# : 이진 숫자 체계에서 가장 작은 데이터 단위 (0, 1)

# 비트 연산자
# : 정수를 이진수로 표현했을 때 각 비트(bit)단위로 연산을 수행

# 비트 값 예시
a = 60 # 0011 1100
b = 13 # 0000 1101

# 1. 비트 and 연산자(& - 앰퍼샌드)
# : 각 비트를 비교해 모두 1이면 1을 반환, 그 외에는 0을 반환
print(a & b) # 12 - 0000 1100

# 2. 비트 or 연산자(| - verticle bar)
# : 각 비트를 비교해 하나라도 1이면 1을 반환
#   , 모두 0일 경우에만 0을 반환
print(a | b) # 61 - 0011 1101

# 3. 비트 xor 연산자(^ - 꺽쇠)
# : 각 비트를 비교해 서로 다르면 1을 반환, 같으면 0을 반환
print(a ^ b) # 49 - 0011 0001

# 4. 비트 not 연산자(~ - 물결)
# : 각 비트를 반전
print(~a) # -61 1100 0011

#! 비트 연산자 사용 목적
# 1. 성능 최적화
# : 매우 빠른 연산 처리 - 대량의 데이터 처리나 성능 처리에 유용
# 2. 알고리즘 구현
# : 특정 알고리즘(암호화, 압축, 그래픽 처리) 등에서 비트 연산을 사용