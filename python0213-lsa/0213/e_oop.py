### 객체 지향 프로그래밍 ###

#! 절차 지향 프로그래밍
# : 프로그램을 일련의 순차적인 절차로 구성하는 방식
# : 데이터와 함수가 별개로 존재
# : 프로그램은 함수를 순차적으로 호출하여 작업을 수행

# - 함수와 변수를 기반으로 한 프로그래밍
# 변수: 상태 저장
# 함수: 변수의 상태를 변경하는데 사용

# - 장단점
# 장점: 단순하고, 이해하기 쉬움, 작은 규모의 프로그램 작성에 용이
# 단점: 대규모 프로그램에서 코드의 재사용성과 유지보수에 어려움

#! 객체 지향 프로그래밍
# : 프로그램을 객체의 집합으로 구성하는 방식
# : 객체는 데이터와 해당 데이터를 조작하는 메서드를 함께 캡슐화

# - 클래스와 객체로 이루어진 프로그래밍
# 클래스: 객체를 정의(데이터와 메서드)
# 객체: 클래스의 인스턴스(실제 사용되는 데이터)

# - 장단점
# 장점: 코드의 재사용성과 유지보수에 용이
# 단점: 학습곡선에 어려움, 설계 초기에 시간과 노력이 필요

#! 파이썬의 프로그래밍 패러다임(틀, 체계)
# : 다중 패러다임 언어
# : 객체 & 절차 지향 프로그래밍 모두를 지원